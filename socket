协议组
CAF_INET
send sendto sendmsg 发送套接字
recv recvfrom recvmse 接收
poll select 监听
osi七层网络协议
tcp/ip四层网络协议
udp
主动：send socket sendto close
被动：socket bind recvfrom close recv
字节序：
本地到网络 htons() htonl()
网络到本地 ntohs() ntohl()
点分十进制ip到addr
inet_aton()
转回本地
inrtr_ntoa()
tcp
主动：socket bind connect send close
被动：socket bind listen accept recv/read close
udp
socket bind recvfrom close
socket sendto clsoe
三次握手四次挥手
客户主机               服务器
连接请求   syn=1 seq=client_isn           
                      连接允许
                      syn=1,seq=client_isn,ack=client_isn+1
 ACK
                      syn=0,seq=client_isn+1
                      ack=server_isn+1
 首先客户端发送连接请求报文，SERVER接收连接回复ACK报文并为之分配资源
 client端接收ACK报文后也向SERVer端发生ACK报文,并分配资源,这样就建立tcp连接
 四次挥手
 client               sever
 发送中断请求报文fin     
                      回复ack
   ACK
                      发送fin
   fin 
                        ack
     假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说"我Client端没有数据要发给你了"，但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，"告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息"。这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，"告诉Client端，好了，我这边数据发完了，准备好关闭连接了"。Client端收到FIN报文后，"就知道可以关闭连接了，但是他还是不相信网络，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。“，Server端收到ACK后，"就知道可以断开连接了"。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，我Client端也可以关闭连接了。Ok，TCP连接就这样关闭了！
  
 【问题1】为什么连接的时候是三次握手，关闭的时候却是四次握手？
答：因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，"你发的FIN报文我收到了"。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。

【问题2】为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？

答：虽然按道理，四个报文都发送完毕，我们可以直接进入CLOSE状态了，但是我们必须假象网络是不可靠的，有可以最后一个ACK丢失。所以TIME_WAIT状态就是用来重发可能丢失的ACK报文。



 
 
